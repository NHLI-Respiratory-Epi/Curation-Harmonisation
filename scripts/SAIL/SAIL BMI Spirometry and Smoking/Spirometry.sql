------------------------ TABLE CREATION FOR PROJECT 1387 -- Spirometry -------------- 21/02/2023 -----------------------------------------------------------------------------------
------------------------------------------------------------------------------ Code Preperation ------------------------------------------------------------------------------------
------- COPD ---------      Extract counts for FEV1 % predict had bronchodil
-- Gather All Spirometry Values
DECLARE GLOBAL TEMPORARY TABLE ALL_SPIROMETRY_VALUES_COPD AS (
SELECT DISTINCT wgec.ALF_PE, wgec.EVENT_CD, wgec.EVENT_DT, wgec.EVENT_VAL 
,FEV1
,FEV1_PREDICTED
,FEV1_PERCENT_PRED
,FVC
,FVC_PREDICTED
,FVC_PERCENT_PRED 
,FEV1_FVC_RATIO
,FEV1_FVC_RATIO_PREDICTED
,FEV1_FVC_RATIO_PERCENT_PRED
,BRONCHDIL 
,GENERALSPIROM
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_SPIROMETRY_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Check Counts 
SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_COPD 
ORDER BY ALF_PE, EVENT_DT

SELECT Count(DISTINCT Alf_pe) FROM SESSION.ALL_SPIROMETRY_VALUES_COPD 


-- Those with Fev1 % predicted AND Bronchodl
SELECT Count(ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE (FEV1_PERCENT_PRED = '1' OR FEV1_PERCENT_PRED = '2') AND (BRONCHDIL = '1' OR BRONCHDIL = '2')

SELECT DISTINCT ALF_PE, EVENT_DT, FEV1_PERCENT_PRED, BRONCHDIL FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE (FEV1_PERCENT_PRED = '1' OR FEV1_PERCENT_PRED = '2') AND (BRONCHDIL = '1' OR BRONCHDIL = '2')
AND EVENT_DT = 
ORDER BY ALF_PE

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE FEV1_PREDICTED = '1'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE FEV1_PERCENT_PRED = '1'

-- Filter Spirometry Values (FEV1)
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_LESS_THAN_7_COPD AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE FEV1 = '1'
AND EVENT_VAL BETWEEN '0.1' AND '7'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ALL_EVENTS_LESS_THAN_7
ORDER BY ALF_PE, EVENT_DT
 
-- Extract all events over 200 and correct
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_OVER_200_COPD AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_COPD
WHERE FEV1 = '1'
AND EVENT_VAL > '200'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

UPDATE SESSION.ALL_EVENTS_OVER_200_COPD SET EVENT_VAL = EVENT_VAL/1000

-- Delete all values greater than 7 
DELETE FROM SESSION.ALL_EVENTS_OVER_200_COPD WHERE EVENT_VAL > 7 

SELECT * FROM SESSION.ALL_EVENTS_OVER_200_COPD

-- Union Corrected Tables 
DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_COPD AS( 
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM 
(
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_LESS_THAN_7_COPD
UNION ALL
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_OVER_200_COPD
)
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_COPD AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_COPD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD AS( 
SELECT DISTINCT sfcc.ALF_PE, sfcc.EVENT_DT, sfcc.EVENT_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_COPD sfcc
INNER JOIN SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_COPD sscls ON sfcc.ALF_PE = sscls.ALF_PE AND sfcc.EVENT_DT = sscls.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_MAX_COPD AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS MAX_VAL
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_MAX_COPD) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD

DECLARE GLOBAL TEMPORARY TABLE test AS( 
SELECT ALF_PE, COUNT(ALF_PE) AS counts FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.test WHERE counts = '2')

-- Filter Spirometry Values (FEV1%)
DECLARE GLOBAL TEMPORARY TABLE FEV1_Percentage_COPD AS (
SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_COPD 
WHERE FEV1_PERCENT_PRED = '1'
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.FEV1_Percentage_COPD
WHERE EVENT_VAL IS NULL

DELETE FROM SESSION.FEV1_Percentage_COPD
WHERE EVENT_VAL NOT BETWEEN 5 AND 200

--- establish height for cohort 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_COPD AS (
SELECT DISTINCT SSA.ALF_PE, wgec.GNDR_CD, ssc.READCODE, wgec.EVENT_VAL, wgec.EVENT_DT 
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_BMI_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
WHERE CATEGORY = 'height'
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
AND (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2')
AND (wgec.EVENT_VAL BETWEEN '90' AND '200' OR wgec.EVENT_VAL < '2')
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- SELECT MAX VALUE PER ALF AND LATEST DATE
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_COPD_MAX AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS LATEST_EVENT
FROM SESSION.HEIGHT_COPD
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_COPD_V2 AS (
SELECT DISTINCT hc.ALF_PE, GNDR_CD, READCODE, EVENT_VAL, EVENT_DT
FROM SESSION.HEIGHT_COPD hc
INNER JOIN SESSION.HEIGHT_COPD_MAX hcm ON hcm.ALF_PE = hc.ALF_PE AND hc.Event_VAL = hcm.LATEST_EVENT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

--- Where duplicates, select greatest value 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_COPD_LATEST AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.HEIGHT_COPD_V2
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_COPD_DISTINCT AS (
SELECT hc.* FROM SESSION.HEIGHT_COPD_V2 hc
INNER JOIN SESSION.HEIGHT_COPD_LATEST hdm ON hdm.ALF_PE = hc.ALF_PE AND hc.Event_DT = hdm.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT COUNT(ALF_PE) FROM SESSION.HEIGHT_COPD_DISTINCT

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.HEIGHT_COPD_DISTINCT

SELECT * FROM SESSION.HEIGHT_COPD_DISTINCT
ORDER BY ALF_PE

UPDATE SESSION.HEIGHT_COPD_DISTINCT SET EVENT_VAL = EVENT_VAL/100
WHERE EVENT_VAL > 90 

SELECT * FROM SESSION.HEIGHT_COPD_DISTINCT

-- Calculate Predicted FEV1 
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_SETUP_COPD AS (
SELECT hcd.ALF_PE, hcd.GNDR_CD, (YEAR(hcd.EVENT_DT)-YEAR_OF_BIRTH) AS AGE_IN_YEARS, hcd.EVENT_VAL AS HEIGHT_IN_CM 
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD dtc
INNER JOIN SESSION.HEIGHT_COPD_DISTINCT hcd ON hcd.ALF_PE = dtc.ALF_PE AND hcd.GNDR_CD = dtc.GNDR_CD 
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_SETUP

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_BASIC_COPD AS (
SELECT ALF_PE, GNDR_CD, 
CASE WHEN GNDR_CD = '1' THEN (('4.3'* HEIGHT_IN_CM)-('0.029'*AGE_IN_YEARS)-'2.49' ) ELSE (('3.95'* HEIGHT_IN_CM)-('0.025'*AGE_IN_YEARS)-'2.6' ) END AS PREDICTED_FEV1
FROM SESSION.PREDICTED_FEV1_SETUP_COPD
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- get Predicted FEV1 from  existing sources 
DECLARE GLOBAL TEMPORARY TABLE EXISTING_FEV1_COPD AS (
SELECT DISTINCT ALF_PE, EVENT_VAL, EVENT_DT FROM SESSION.ALL_SPIROMETRY_VALUES_COPD WHERE fev1_predicted = '1'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;


DECLARE GLOBAL TEMPORARY TABLE LATEST_EXISTING_FEV1_COPD AS (
SELECT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE FROM SESSION.EXISTING_FEV1_COPD 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_COPD  
WHERE (ALF_PE, EVENT_DT) NOT IN(SELECT ALF_PE, LATEST_DATE FROM SESSION.LATEST_EXISTING_FEV1_COPD)

DECLARE GLOBAL TEMPORARY TABLE MAX_EXISTING_FEV1_COPD AS (
SELECT ALF_PE, MAX(EVENT_VAL) AS MAX_EVENT FROM SESSION.EXISTING_FEV1_COPD 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_COPD  
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_EVENT FROM SESSION.MAX_EXISTING_FEV1_COPD) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE), COUNT(DISTINCT ALF_PE) FROM SESSION.EXISTING_FEV1_COPD 

-- Combine two sources 

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_COPD AS (
SELECT dtc.ALF_PE,
CASE WHEN fvc.EVENT_VAL IS NULL OR fvc.EVENT_VAL > 7 THEN fbc.PREDICTED_FEV1 ELSE fvc.EVENT_VAL END AS FEV1_PREDICTED
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD dtc
LEFT JOIN SESSION.PREDICTED_FEV1_BASIC_COPD fbc ON fbc.ALF_PE = dtc.ALF_PE
LEFT JOIN SESSION.EXISTING_FEV1_COPD fvc ON  fvc.ALF_PE = dtc.ALF_PE
WHERE FOLLOW_UP_END > '31/12/2019' AND (DOD > '31/12/2019' OR DOD IS NULL)
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_COPD

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_COPD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_COPD

DELETE FROM SESSION.PREDICTED_FEV1_COPD WHERE FEV1_PREDICTED IS NULL

-- Calculate Predicted FEV1 %
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_PERCENTAGE_COPD AS (
SELECT pfc.ALF_PE, ((fcl.EVENT_VAL/pfc.FEV1_PREDICTED)*100) AS Percent_Predicted_FEV1
FROM 
SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_COPD fcl
INNER JOIN SESSION.PREDICTED_FEV1_COPD pfc ON pfc.ALF_PE = fcl.ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Counts 

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD
WHERE PERCENT_PREDICTED_FEV1 < '30'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD
WHERE PERCENT_PREDICTED_FEV1 BETWEEN '30' AND '49'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD
WHERE PERCENT_PREDICTED_FEV1 BETWEEN '50' AND '80'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD
WHERE PERCENT_PREDICTED_FEV1 > '80'


-- Those with Fev1 % predicted AND Bronchodl -- calculate how many from 31st of december too 
SELECT Count(fpc.ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD fpc
LEFT JOIN SESSION.ALL_SPIROMETRY_VALUES_COPD asvc ON asvc.alf_pe = fpc.ALF_PE
WHERE asvc.BRONCHDIL = '1'

SELECT Count(fpc.ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD fpc
LEFT JOIN SESSION.ALL_SPIROMETRY_VALUES_COPD asvc ON asvc.alf_pe = fpc.ALF_PE


SELECT Count(DISTINCT fpc.ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_COPD fpc
LEFT JOIN SESSION.ALL_SPIROMETRY_VALUES_COPD asvc ON asvc.alf_pe = fpc.ALF_PE
WHERE asvc.BRONCHDIL = '1'


------------------------------------------------------------------------------------------------ ILD --------------------------------------------------------------------------------------------
-- All Spirometry Values
DECLARE GLOBAL TEMPORARY TABLE ALL_SPIROMETRY_VALUES_ILD AS (
SELECT DISTINCT wgec.ALF_PE, wgec.EVENT_CD, wgec.EVENT_DT, wgec.EVENT_VAL 
,FEV1
,FEV1_PREDICTED
,FEV1_PERCENT_PRED
,FVC
,FVC_PREDICTED
,FVC_PERCENT_PRED
,FEV1_FVC_RATIO
,FEV1_FVC_RATIO_PREDICTED
,FEV1_FVC_RATIO_PERCENT_PRED
,BRONCHDIL
,GENERALSPIROM
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_ILD SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_SPIROMETRY_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_ILD 
ORDER BY ALF_PE, EVENT_DT

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_ILD
WHERE FEV1_PREDICTED = '1'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_ILD
WHERE FEV1_PERCENT_PRED = '1'

-- Filter Spirometry Values (FEV1)
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_LESS_THAN_7_ILD AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_ILD
WHERE FEV1 = '1'
AND EVENT_VAL BETWEEN '0.1' AND '7'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ALL_EVENTS_LESS_THAN_7
ORDER BY ALF_PE, EVENT_DT
 
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_OVER_200_ILD AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_ILD
WHERE FEV1 = '1'
AND EVENT_VAL > '200'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

UPDATE SESSION.ALL_EVENTS_OVER_200_ILD SET EVENT_VAL = EVENT_VAL/1000

DELETE FROM SESSION.ALL_EVENTS_OVER_200_ILD WHERE EVENT_VAL > 7 

SELECT * FROM SESSION.ALL_EVENTS_OVER_200_ILD

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_ILD AS( 
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM 
(
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_LESS_THAN_7_ILD
UNION ALL
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_OVER_200_ILD
)
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_ILD AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_ILD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD AS( 
SELECT DISTINCT sfcc.ALF_PE, sfcc.EVENT_DT, sfcc.EVENT_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_ILD sfcc
INNER JOIN SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_ILD sscls ON sfcc.ALF_PE = sscls.ALF_PE AND sfcc.EVENT_DT = sscls.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_MAX_ILD AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS MAX_VAL
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_MAX_ILD) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD

DECLARE GLOBAL TEMPORARY TABLE test AS( 
SELECT ALF_PE, COUNT(ALF_PE) AS counts FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.test WHERE counts = '2')


-- Filter Spirometry Values (FEV1%)
DECLARE GLOBAL TEMPORARY TABLE FEV1_Percentage_ILD AS (
SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_ILD 
WHERE FEV1_PERCENT_PRED = '1'
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.FEV1_Percentage_ILD
WHERE EVENT_VAL IS NULL

DELETE FROM SESSION.FEV1_Percentage_ILD
WHERE EVENT_VAL NOT BETWEEN 8 AND 151

--- establish height for cohort 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ILD AS (
SELECT DISTINCT SSA.ALF_PE, wgec.GNDR_CD, ssc.READCODE, wgec.EVENT_VAL, wgec.EVENT_DT 
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_ILD SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_BMI_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
WHERE CATEGORY = 'height'
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
AND (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2')
AND (wgec.EVENT_VAL BETWEEN '90' AND '200' OR wgec.EVENT_VAL < '2')
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- SELECT MAX DATE PER ALF AND LATEST DATE
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ILD_MAX AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS LATEST_EVENT
FROM SESSION.HEIGHT_ILD
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ILD_V2 AS (
SELECT DISTINCT hc.ALF_PE, GNDR_CD, READCODE, EVENT_VAL, EVENT_DT
FROM SESSION.HEIGHT_ILD hc
INNER JOIN SESSION.HEIGHT_ILD_MAX hcm ON hcm.ALF_PE = hc.ALF_PE AND hc.Event_VAL = hcm.LATEST_EVENT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

--- Where duplicates, select greatest value 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ILD_LATEST AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.HEIGHT_ILD_V2
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ILD_DISTINCT AS (
SELECT hc.* FROM SESSION.HEIGHT_ILD_V2 hc
INNER JOIN SESSION.HEIGHT_ILD_LATEST hdm ON hdm.ALF_PE = hc.ALF_PE AND hc.Event_DT = hdm.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT COUNT(ALF_PE) FROM SESSION.HEIGHT_ILD_DISTINCT

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.HEIGHT_ILD_DISTINCT

SELECT * FROM SESSION.HEIGHT_ILD_DISTINCT
ORDER BY ALF_PE

UPDATE SESSION.HEIGHT_ILD_DISTINCT SET EVENT_VAL = EVENT_VAL/100
WHERE EVENT_VAL > 90 

SELECT * FROM SESSION.HEIGHT_ILD_DISTINCT

-- Calculate Predicted FEV1 
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_SETUP_ILD AS (
SELECT hcd.ALF_PE, hcd.GNDR_CD, (YEAR(hcd.EVENT_DT)-YEAR_OF_BIRTH) AS AGE_IN_YEARS, hcd.EVENT_VAL AS HEIGHT_IN_CM 
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_ILD dtc
INNER JOIN SESSION.HEIGHT_ILD_DISTINCT hcd ON hcd.ALF_PE = dtc.ALF_PE AND hcd.GNDR_CD = dtc.GNDR_CD 
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_SETUP

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_BASIC_ILD AS (
SELECT ALF_PE, GNDR_CD, 
CASE WHEN GNDR_CD = '1' THEN (('4.3'* HEIGHT_IN_CM)-('0.029'*AGE_IN_YEARS)-'2.49' ) ELSE (('3.95'* HEIGHT_IN_CM)-('0.025'*AGE_IN_YEARS)-'2.6' ) END AS PREDICTED_FEV1
FROM SESSION.PREDICTED_FEV1_SETUP_ILD
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- get Predicted FEV1 from  existing sources 
DECLARE GLOBAL TEMPORARY TABLE EXISTING_FEV1_ILD AS (
SELECT DISTINCT ALF_PE, EVENT_VAL, EVENT_DT FROM SESSION.ALL_SPIROMETRY_VALUES_ILD WHERE fev1_predicted = '1'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE LATEST_EXISTING_FEV1_ILD AS (
SELECT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE FROM SESSION.EXISTING_FEV1_ILD 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_ILD  
WHERE (ALF_PE, EVENT_DT) NOT IN(SELECT ALF_PE, LATEST_DATE FROM SESSION.LATEST_EXISTING_FEV1_ILD)

DECLARE GLOBAL TEMPORARY TABLE MAX_EXISTING_FEV1_ILD AS (
SELECT ALF_PE, MAX(EVENT_VAL) AS MAX_EVENT FROM SESSION.EXISTING_FEV1_ILD 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_ILD  
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_EVENT FROM SESSION.MAX_EXISTING_FEV1_ILD) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE), COUNT(DISTINCT ALF_PE) FROM SESSION.EXISTING_FEV1_ILD 

-- Combine two sources 

SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_ILD AS (
SELECT dtc.ALF_PE,
CASE WHEN fvc.EVENT_VAL IS NULL OR fvc.EVENT_VAL > 7 THEN fbc.PREDICTED_FEV1 ELSE fvc.EVENT_VAL END AS FEV1_PREDICTED
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_ILD dtc
LEFT JOIN SESSION.PREDICTED_FEV1_BASIC_ILD fbc ON fbc.ALF_PE = dtc.ALF_PE
LEFT JOIN SESSION.EXISTING_FEV1_ILD fvc ON  fvc.ALF_PE = dtc.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_ILD

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_ILD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_ILD

DELETE FROM SESSION.PREDICTED_FEV1_ILD WHERE FEV1_PREDICTED IS NULL

-- Calculate Predicted FEV1 %
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_PERCENTAGE_ILD AS (
SELECT pfc.ALF_PE, ((fcl.EVENT_VAL/pfc.FEV1_PREDICTED)*100) AS Percent_Predicted_FEV1
FROM 
SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ILD fcl
INNER JOIN SESSION.PREDICTED_FEV1_ILD pfc ON pfc.ALF_PE = fcl.ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ILD

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ILD

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ILD
WHERE Percent_Predicted_FEV1 < '30' 

------------------------------------------------------------------------------------------------ ASTHMA --------------------------------------------------------------------------------------------
-- All Spirometry Values
DECLARE GLOBAL TEMPORARY TABLE ALL_SPIROMETRY_VALUES_ASTHMA AS (
SELECT DISTINCT wgec.ALF_PE, wgec.EVENT_CD, wgec.EVENT_DT, wgec.EVENT_VAL 
,FEV1
,FEV1_PREDICTED
,FEV1_PERCENT_PRED
,FVC
,FVC_PREDICTED
,FVC_PERCENT_PRED
,FEV1_FVC_RATIO
,FEV1_FVC_RATIO_PREDICTED
,FEV1_FVC_RATIO_PERCENT_PRED
,BRONCHDIL
,GENERALSPIROM
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_ASTHMA SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_SPIROMETRY_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
AND DAYS(wgec.EVENT_DT) - DAYS(id.WOB) >= 18*365.25
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA 
ORDER BY ALF_PE, EVENT_DT

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA
WHERE FEV1_PREDICTED = '1'

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA
WHERE FEV1_PERCENT_PRED = '1'

-- Filter Spirometry Values (FEV1)
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_LESS_THAN_7_ASTHMA AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA
WHERE FEV1 = '1'
AND EVENT_VAL BETWEEN '0.1' AND '7'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ALL_EVENTS_LESS_THAN_7
ORDER BY ALF_PE, EVENT_DT
 
DECLARE GLOBAL TEMPORARY TABLE ALL_EVENTS_OVER_200_ASTHMA AS (
SELECT DISTINCT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA
WHERE FEV1 = '1'
AND EVENT_VAL > '200'
AND EVENT_DT BETWEEN '01/01/2004' AND '31/12/2019'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

UPDATE SESSION.ALL_EVENTS_OVER_200_ASTHMA SET EVENT_VAL = EVENT_VAL/1000

DELETE FROM SESSION.ALL_EVENTS_OVER_200_ASTHMA WHERE EVENT_VAL > 7 

SELECT * FROM SESSION.ALL_EVENTS_OVER_200_ASTHMA

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_ASTHMA AS( 
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM 
(
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_LESS_THAN_7_ASTHMA
UNION ALL
SELECT ALF_PE, EVENT_CD, EVENT_DT, EVENT_VAL FROM SESSION.ALL_EVENTS_OVER_200_ASTHMA
)
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_ASTHMA AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_ASTHMA
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA AS( 
SELECT DISTINCT sfcc.ALF_PE, sfcc.EVENT_DT, sfcc.EVENT_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_ASTHMA sfcc
INNER JOIN SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_ASTHMA sscls ON sfcc.ALF_PE = sscls.ALF_PE AND sfcc.EVENT_DT = sscls.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE SPIROMETRY_FEV1_CORRECTED_MAX_ASTHMA AS( 
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS MAX_VAL
FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_VAL FROM SESSION.SPIROMETRY_FEV1_CORRECTED_MAX_ASTHMA) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA

DECLARE GLOBAL TEMPORARY TABLE test AS( 
SELECT ALF_PE, COUNT(ALF_PE) AS counts FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.test WHERE counts = '2')


-- Filter Spirometry Values (FEV1%)
DECLARE GLOBAL TEMPORARY TABLE FEV1_Percentage_ASTHMA AS (
SELECT * FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA 
WHERE FEV1_PERCENT_PRED = '1'
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.FEV1_Percentage_ASTHMA
WHERE EVENT_VAL IS NULL

DELETE FROM SESSION.FEV1_Percentage_ASTHMA
WHERE EVENT_VAL NOT BETWEEN 8 AND 151

--- establish height for cohort 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ASTHMA AS (
SELECT DISTINCT SSA.ALF_PE, wgec.GNDR_CD, ssc.READCODE, wgec.EVENT_VAL, wgec.EVENT_DT 
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_ASTHMA SSA ON wgec.ALF_PE = SSA.ALF_PE
INNER JOIN sailw1387v.SS_BMI_CODES ssc ON ssc.READCODE = wgec.EVENT_CD 
WHERE CATEGORY = 'height'
AND (wgec.EVENT_DT BETWEEN '31/12/2014' AND '31/12/2019')
AND (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2')
AND (wgec.EVENT_VAL BETWEEN '90' AND '200' OR wgec.EVENT_VAL < '2')
AND DAYS(wgec.EVENT_DT) - DAYS(id.WOB) >= 18*365.25
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- SELECT MAX DATE PER ALF AND LATEST DATE
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ASTHMA_MAX AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_VAL) AS LATEST_EVENT
FROM SESSION.HEIGHT_ASTHMA
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ASTHMA_V2 AS (
SELECT DISTINCT hc.ALF_PE, GNDR_CD, READCODE, EVENT_VAL, EVENT_DT
FROM SESSION.HEIGHT_ASTHMA hc
INNER JOIN SESSION.HEIGHT_ASTHMA_MAX hcm ON hcm.ALF_PE = hc.ALF_PE AND hc.Event_VAL = hcm.LATEST_EVENT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

--- Where duplicates, select greatest value 
DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ASTHMA_LATEST AS (
SELECT DISTINCT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE
FROM SESSION.HEIGHT_ASTHMA_V2
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE HEIGHT_ASTHMA_DISTINCT AS (
SELECT hc.* FROM SESSION.HEIGHT_ASTHMA_V2 hc
INNER JOIN SESSION.HEIGHT_ASTHMA_LATEST hdm ON hdm.ALF_PE = hc.ALF_PE AND hc.Event_DT = hdm.LATEST_DATE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT COUNT(ALF_PE) FROM SESSION.HEIGHT_ASTHMA_DISTINCT

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.HEIGHT_ASTHMA_DISTINCT

SELECT * FROM SESSION.HEIGHT_ASTHMA_DISTINCT
ORDER BY ALF_PE

UPDATE SESSION.HEIGHT_ASTHMA_DISTINCT SET EVENT_VAL = EVENT_VAL/100
WHERE EVENT_VAL > 90 

SELECT * FROM SESSION.HEIGHT_ASTHMA_DISTINCT

-- Calculate Predicted FEV1 
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_SETUP_ASTHMA AS (
SELECT hcd.ALF_PE, hcd.GNDR_CD, (YEAR(hcd.EVENT_DT)-YEAR_OF_BIRTH) AS AGE_IN_YEARS, hcd.EVENT_VAL AS HEIGHT_IN_CM 
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_ASTHMA dtc
INNER JOIN SESSION.HEIGHT_ASTHMA_DISTINCT hcd ON hcd.ALF_PE = dtc.ALF_PE AND hcd.GNDR_CD = dtc.GNDR_CD 
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_SETUP

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_BASIC_ASTHMA AS (
SELECT ALF_PE, GNDR_CD, 
CASE WHEN GNDR_CD = '1' THEN (('4.3'* HEIGHT_IN_CM)-('0.029'*AGE_IN_YEARS)-'2.49' ) ELSE (('3.95'* HEIGHT_IN_CM)-('0.025'*AGE_IN_YEARS)-'2.6' ) END AS PREDICTED_FEV1
FROM SESSION.PREDICTED_FEV1_SETUP_ASTHMA
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- get Predicted FEV1 from  existing sources 
DECLARE GLOBAL TEMPORARY TABLE EXISTING_FEV1_ASTHMA AS (
SELECT DISTINCT ALF_PE, EVENT_VAL, EVENT_DT FROM SESSION.ALL_SPIROMETRY_VALUES_ASTHMA WHERE fev1_predicted = '1'
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE LATEST_EXISTING_FEV1_ASTHMA AS (
SELECT ALF_PE, MAX(EVENT_DT) AS LATEST_DATE FROM SESSION.EXISTING_FEV1_ASTHMA 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_ASTHMA  
WHERE (ALF_PE, EVENT_DT) NOT IN(SELECT ALF_PE, LATEST_DATE FROM SESSION.LATEST_EXISTING_FEV1_ASTHMA)

DECLARE GLOBAL TEMPORARY TABLE MAX_EXISTING_FEV1_ASTHMA AS (
SELECT ALF_PE, MAX(EVENT_VAL) AS MAX_EVENT FROM SESSION.EXISTING_FEV1_ASTHMA 
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DELETE FROM SESSION.EXISTING_FEV1_ASTHMA  
WHERE (ALF_PE, EVENT_VAL) NOT IN(SELECT ALF_PE, MAX_EVENT FROM SESSION.MAX_EXISTING_FEV1_ASTHMA) OR EVENT_VAL IS NULL

SELECT COUNT(ALF_PE), COUNT(DISTINCT ALF_PE) FROM SESSION.EXISTING_FEV1_ASTHMA 

-- Combine two sources 

SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA

DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_ASTHMA AS (
SELECT dtc.ALF_PE,
CASE WHEN fvc.EVENT_VAL IS NULL OR fvc.EVENT_VAL > 7 THEN fbc.PREDICTED_FEV1 ELSE fvc.EVENT_VAL END AS FEV1_PREDICTED
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_ASTHMA dtc
LEFT JOIN SESSION.PREDICTED_FEV1_BASIC_ASTHMA fbc ON fbc.ALF_PE = dtc.ALF_PE
LEFT JOIN SESSION.EXISTING_FEV1_ASTHMA fvc ON  fvc.ALF_PE = dtc.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_ASTHMA

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_ASTHMA

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_ASTHMA

DELETE FROM SESSION.PREDICTED_FEV1_ASTHMA WHERE FEV1_PREDICTED IS NULL

-- Calculate Predicted FEV1 %
DECLARE GLOBAL TEMPORARY TABLE PREDICTED_FEV1_PERCENTAGE_ASTHMA AS (
SELECT pfc.ALF_PE, ((fcl.EVENT_VAL/pfc.FEV1_PREDICTED)*100) AS Percent_Predicted_FEV1
FROM 
SESSION.SPIROMETRY_FEV1_CORRECTED_LATEST_JOINED_ASTHMA fcl
INNER JOIN SESSION.PREDICTED_FEV1_ASTHMA pfc ON pfc.ALF_PE = fcl.ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ASTHMA

SELECT COUNT(ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ASTHMA

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.PREDICTED_FEV1_PERCENTAGE_ASTHMA
WHERE Percent_Predicted_FEV1 < '30' 



