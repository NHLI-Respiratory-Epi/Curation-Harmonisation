------------------------ TABLE CREATION FOR PROJECT 1387 -- COPD -------------- 29/04/2022

--INSTRUCTIONS - Use Control F find and replace too:
-- Change "SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201" to your Projects GP table 
-- Change "SAIL1387V.WDSD_AR_PERS_20220307" to your Projects WDSD_AR_PERS table
-- Change "Sailw1387v.SS_COPD_CODES" to the projects codelist for COPD
-- Change 
--
--
--
--
--




--- SEARCH FOR --// for code segments that need alteration to match project requirements

------------------------------------------------------------------------------------SETUP--------------------------------------------------------------------------------------------------
-------- Identify First Event for each ALF 

-- Select the first diagnisis for each ALF
DECLARE GLOBAL TEMPORARY TABLE MIN_COPD_DIAG_SETUP AS (
SELECT DISTINCT wgec.ALF_PE, MIN(wgec.EVENT_DT) AS FIRST_DIAGNOSIS_DT
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
INNER JOIN sailw1387v.SS_COPD_CODES COPD ON COPD.EVENT_CD = wgec.EVENT_CD 
LEFT JOIN SAIL1387V.WDSD_AR_PERS_20220307 per  ON per.ALF_PE = wgec.ALF_PE
WHERE (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2') --// only alows for a clearly defined gender code - delete if not applicable 
AND (DOD > '01/01/2004' OR DOD IS NULL) --// change '01/01/2004' to projects start date
AND ((wgec.EVENT_DT) > YEAR(wgec.WOB)) 
AND (YEAR(wgec.EVENT_DT)- YEAR(per.WOB)) >= '35' --// remove events where the person is under 35 - remove if not applicable for the project
AND COPD.EVENT_CD = wgec.EVENT_CD 
GROUP BY wgec.ALF_PE
ORDER BY wgec.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;


DECLARE GLOBAL TEMPORARY TABLE MIN_COPD_DIAG AS (
SELECT DISTINCT ALF_PE, min(FIRST_DIAGNOSIS_DT) AS FIRST_DIAGNOSIS_DT
FROM SESSION.MIN_COPD_DIAG_SETUP
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Delete any events before 1930 as they are very likely incorrect entries 
DELETE FROM SESSION.MIN_COPD_DIAG WHERE FIRST_DIAGNOSIS_DT < '01/01/1930'  --// Optional but was done to try and improve data quality

-- prototype cohort for generating WIMD and Ethnicity extraction
DECLARE GLOBAL TEMPORARY TABLE prototype_cohort_COPD AS (
SELECT DISTINCT wgec.ALF_PE ,per.WOB, per.DOD, per.GNDR_CD, FIRST_DIAGNOSIS_DT
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
LEFT JOIN SAIL1387V.WDSD_AR_PERS_20220307 per  ON per.ALF_PE = wgec.ALF_PE
LEFT JOIN SESSION.MIN_COPD_DIAG mid ON wgec.ALF_PE = mid.ALF_PE
INNER JOIN sailw1387v.SS_COPD_CODES COPD ON COPD.EVENT_CD = wgec.EVENT_CD 
WHERE (per.GNDR_CD = '1' OR per.GNDR_CD = '2')  --// only alows for a clearly defined gender code - delete if not applicable 
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

------------------------------------------------------------------------------------ WIMD/LSOA -------------------------------------------------------------------------------------------------

-- select all WIMD Entries for cohort 
DECLARE GLOBAL TEMPORARY TABLE ALL_LSOA_WIMD AS (
SELECT rt.ALF_PE, lsoa.WIMD_2011_QUINTILE , START_DATE , END_DATE , WIMD_2011_SCORE 
FROM SESSION.prototype_cohort_COPD rt
LEFT JOIN sail1387v.WDSD_CLEAN_ADD_GEOG_CHAR_LSOA2001_20220307 lsoa ON rt.ALF_PE = lsoa.ALF_PE 
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM sail1387v.WDSD_CLEAN_ADD_GEOG_CHAR_LSOA2001_20220307 

-- Drop table to add changes if needed
DROP TABLE sailw1387V.SS_COPD_LSOA_ALL

-- Create perminent table 
CREATE TABLE sailw1387V.SS_COPD_LSOA_ALL(
ALF_PE BIGINT
, WIMD_2011_QUINTILE int
, START_DATE DATE
, END_DATE DATE
, WIMD_2011_SCORE DECIMAL);

INSERT INTO sailw1387V.SS_COPD_LSOA_ALL
SELECT DISTINCT 
ALF_PE
, WIMD_2011_QUINTILE 
, START_DATE 
, END_DATE 
, WIMD_2011_SCORE 
FROM SESSION.ALL_LSOA_WIMD
ORDER BY ALF_PE ;

SELECT * FROM sailw1387V.SS_COPD_LSOA_ALL

-- Select the most recent WIMD Date from the study period 
DECLARE GLOBAL TEMPORARY TABLE LATEST_WIMD_DATE AS (
SELECT DISTINCT ALF_PE, MAX(START_DATE) AS LATEST_START_DATE, MAX(END_DATE) AS LATEST_END_DATE
FROM SESSION.ALL_LSOA_WIMD
WHERE YEAR(END_DATE) > '2014' OR YEAR(END_DATE) IS NULL OR END_DATE='9999-01-01' --// change to suit data avaliability/the projects end date best
GROUP BY ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- inner join with all WIMD to get the latest value for each ALF
DECLARE GLOBAL TEMPORARY TABLE LSOA_COPD AS (
SELECT DISTINCT alw.ALF_PE, WIMD_2011_QUINTILE , START_DATE , END_DATE , WIMD_2011_SCORE 
FROM SESSION.ALL_LSOA_WIMD alw
INNER JOIN SESSION.LATEST_WIMD_DATE lwd ON alw.ALF_PE = lwd.ALF_PE AND alw.START_DATE = lwd.LATEST_START_DATE AND alw.END_DATE = lwd.LATEST_END_DATE
WHERE YEAR(END_DATE) > '2014' OR YEAR(END_DATE) IS NULL OR END_DATE='9999-01-01' --// change to suit data avaliability/the projects end date best
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.LSOA_COPD

DROP TABLE sailw1387V.SS_COPD_LSOA

-- Create perminent table 
CREATE TABLE sailw1387V.SS_COPD_LSOA(
ALF_PE BIGINT
, WIMD_2011_QUINTILE int
, START_DATE DATE
, END_DATE DATE
, WIMD_2011_SCORE DECIMAL);

INSERT INTO sailw1387V.SS_COPD_LSOA
SELECT DISTINCT 
ALF_PE
, WIMD_2011_QUINTILE 
, START_DATE 
, END_DATE 
, WIMD_2011_SCORE 
FROM SESSION.LSOA_COPD
ORDER BY ALF_PE ;

SELECT * FROM sailw1387V.SS_COPD_LSOA

------------------------------------------------------------------------------------Ethnicity TABLE--------------------------------------------------------------------------------------------------
--// IMPORTANT - Delete or ignore if a project does not have ethnicity in IGRP - I intend to make a script with this removed by default in the future when I have the time 

-- select the most common ethnicity for each ALF
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COUNT AS (
SELECT wgec.ALF_PE, COUNT(ec.READCODE ) AS Ethnicity_Code_Count, ec.READCODE AS Ethnicity_Code, Ethnicity6
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
LEFT JOIN sailw1387v.SS_ETHNICITY_CODES ec ON ec.READCODE = wgec.EVENT_CD 
INNER JOIN SESSION.prototype_cohort_COPD rt ON rt.ALF_PE = wgec.ALF_PE 
WHERE wgec.EVENT_CD = ec.READCODE
GROUP BY wgec.ALF_PE, ec.READCODE, Ethnicity6
ORDER BY wgec.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_MAX AS (
SELECT DISTINCT ALF_PE, MAX(Ethnicity_Code_Count) AS MAX_COUNT
FROM SESSION.ETHNICITY_COUNT ec
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_MOST_COMMON AS (
SELECT DISTINCT em.ALF_PE, Ethnicity_Code, MAX_COUNT 
FROM SESSION.ETHNICITY_COUNT ec 
INNER JOIN SESSION.ETHNICITY_MAX em ON ec.Ethnicity_Code_Count = em.MAX_COUNT AND ec.alf_pe = em.alf_pe 
WHERE em.ALF_PE = ec.alf_pe AND ec.Ethnicity_Code_Count = em.MAX_COUNT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- delete where the code reprisents "Not Stated"
DELETE FROM SESSION.ETHNICITY_MOST_COMMON WHERE Ethnicity_Code IN(SELECT READCODE FROM sailw1387v.SS_ETHNICITY_CODES WHERE Ethnicity6 = 'Not Stated') 

-- For cases where events have the same count, select the latest date 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_ALF_COUNTS AS (
SELECT DISTINCT ALF_PE, COUNT(ALF_PE) AS COUNTS
FROM SESSION.ETHNICITY_MOST_COMMON
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_ALF_COUNTS_DUPLICATES AS (
SELECT * FROM SESSION.ETHNICITY_ALF_COUNTS 
WHERE COUNTS > 1
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES_LATEST_DATE AS (
SELECT eac.ALF_PE, MAX(EVENT_DT) AS latest_event FROM SESSION.ETHNICITY_ALF_COUNTS_DUPLICATES eac
INNER JOIN SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec ON wgec.ALF_PE = eac.ALF_PE
INNER JOIN sailw1387v.SS_ETHNICITY_CODES ec ON ec.READCODE = wgec.EVENT_CD 
WHERE ec.READCODE = wgec.EVENT_CD 
GROUP BY eac.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES_LATEST_EVENT AS (
SELECT DISTINCT eac.ALF_PE, EVENT_DT, wgec.EVENT_CD AS LATEST_CODE, Ethnicity6, hes_ethnicity  FROM SESSION.ETHNICITY_ALF_COUNTS_DUPLICATES eac
INNER JOIN SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec ON wgec.ALF_PE = eac.ALF_PE
INNER JOIN sailw1387v.SS_ETHNICITY_CODES ec ON ec.READCODE = wgec.EVENT_CD 
INNER JOIN SESSION.ETHNICITY_DUPLICATES_LATEST_DATE edld ON wgec.EVENT_DT = edld.latest_event AND eac.ALF_PE = edld.ALF_PE
WHERE ec.READCODE = wgec.EVENT_CD  
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Delete From the most common table where there is a duplicate 
DELETE FROM SESSION.ETHNICITY_MOST_COMMON WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT)

-- delete where the code reprisents "Not Stated"
DELETE FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT WHERE LATEST_CODE IN(SELECT READCODE FROM sailw1387v.SS_ETHNICITY_CODES WHERE Ethnicity6 = 'Not Stated') 

-- Combine tables
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON AS (
SELECT DISTINCT ALF_PE,  Ethnicity_Code
FROM 
(SELECT ALF_PE,  Ethnicity_Code FROM SESSION.ETHNICITY_MOST_COMMON emc
UNION ALL
SELECT ALF_PE, LATEST_CODE FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT)
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

--------------------------------------- Create hospital table add in -----------------------------------------------------------

-- Select most common ethnicity
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COUNT_PEDW AS (
SELECT PS.ALF_PE, COUNT(ecp.ETH_GRP_DERIVED_CD) AS Ethnicity_Code_Count, ecp.ETH_GRP_DERIVED_CD AS Ethnicity_Code, ecp.DESCRIPTION
FROM SAIL1387V.PEDW_SPELL_20220228 PS
INNER JOIN  sailw1387v.SS_ETHNICITY_CODES_PEDW ecp ON ecp.ETH_GRP_DERIVED_CD = ps.ETH_GRP_DERIVED_CD AND ecp.DESCRIPTION = ps.ETH_GRP_DERIVED_DESC 
INNER JOIN SESSION.prototype_cohort_COPD rt ON rt.ALF_PE = PS.ALF_PE 
GROUP BY PS.ALF_PE, ecp.ETH_GRP_DERIVED_CD, ecp.DESCRIPTION
ORDER BY PS.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_MAX_PEDW AS (
SELECT DISTINCT ALF_PE, MAX(Ethnicity_Code_Count) AS MAX_COUNT
FROM SESSION.ETHNICITY_COUNT_PEDW ec
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_MOST_COMMON_PEDW AS (
SELECT DISTINCT em.ALF_PE, Ethnicity_Code, MAX_COUNT 
FROM SESSION.ETHNICITY_COUNT_PEDW ec 
INNER JOIN SESSION.ETHNICITY_MAX_PEDW em ON ec.Ethnicity_Code_Count = em.MAX_COUNT AND ec.alf_pe = em.alf_pe 
WHERE em.ALF_PE = ec.alf_pe AND ec.Ethnicity_Code_Count = em.MAX_COUNT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Delete where code equals "Not Stated" 
DELETE FROM SESSION.ETHNICITY_MOST_COMMON_PEDW WHERE Ethnicity_Code = '9' OR Ethnicity_Code = 'Z' 

-- for cases when multiple ethnicities have the same count, select the latest 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_ALF_COUNTS_PEDW AS (
SELECT DISTINCT ALF_PE, COUNT(ALF_PE) AS COUNTS
FROM SESSION.ETHNICITY_MOST_COMMON_PEDW
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_ALF_COUNTS_DUPLICATES_PEDW AS (
SELECT * FROM SESSION.ETHNICITY_ALF_COUNTS_PEDW
WHERE COUNTS > 1
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES_LATEST_DATE_PEDW AS (
SELECT eac.ALF_PE, MAX(ADMIS_DT) AS latest_event FROM SESSION.ETHNICITY_ALF_COUNTS_DUPLICATES_PEDW eac
INNER JOIN SAIL1387V.PEDW_SPELL_20220228 wgec ON wgec.ALF_PE = eac.ALF_PE
GROUP BY eac.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES_LATEST_EVENT_PEDW AS (
SELECT DISTINCT eac.ALF_PE, ADMIS_DT, ec.ETH_GRP_DERIVED_CD AS Ethnicity_Code, ec.DESCRIPTION FROM SESSION.ETHNICITY_ALF_COUNTS_DUPLICATES eac
INNER JOIN SAIL1387V.PEDW_SPELL_20220228 wgec ON wgec.ALF_PE = eac.ALF_PE
INNER JOIN sailw1387v.SS_ETHNICITY_CODES_PEDW ec ON ec.ETH_GRP_DERIVED_CD = wgec.ETH_GRP_DERIVED_CD
INNER JOIN SESSION.ETHNICITY_DUPLICATES_LATEST_DATE_PEDW edld ON wgec.ADMIS_DT = edld.latest_event AND eac.ALF_PE = edld.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Delete duplicates from counts table 
DELETE FROM SESSION.ETHNICITY_MOST_COMMON WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT)

-- Delete where code equals "Not Stated"
DELETE FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT_PEDW WHERE Ethnicity_Code = '9' OR Ethnicity_Code = 'Z'

-- Combine tables 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON_PEDW AS (
SELECT DISTINCT ALF_PE,  Ethnicity_Code
FROM 
(SELECT ALF_PE,  Ethnicity_Code FROM SESSION.ETHNICITY_MOST_COMMON_PEDW emc
UNION ALL
SELECT ALF_PE, Ethnicity_Code FROM SESSION.ETHNICITY_DUPLICATES_LATEST_EVENT_PEDW)
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES_PEDW AS (
SELECT ALF_PE, COUNT(ALF_PE) AS COUNTS FROM SESSION.ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON_PEDW
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Delete where duplicates still exist in spite of cleaning (where multiple ethnicities have the same count on the latest date)
DELETE FROM SESSION.ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON_PEDW WHERE ALF_PE IN(SELECT ALF_PE FROM SESSION.ETHNICITY_DUPLICATES_PEDW WHERE COUNTS > '1')

--- Combine Hospital and GP tables 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_DUPLICATES AS (
SELECT ALF_PE, COUNT(ALF_PE) AS COUNTS FROM SESSION.ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON
GROUP BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_BASIC AS (
SELECT DISTINCT pci.ALF_PE
, CASE WHEN (ECM.Ethnicity_Code IS NULL OR pci.ALF_PE IN(SELECT ALF_PE FROM SESSION.ETHNICITY_DUPLICATES WHERE COUNTS > '1')) THEN ECMP.Ethnicity_Code ELSE ECM.Ethnicity_Code END AS Ethnicity_Code
FROM SESSION.prototype_cohort_COPD pci
LEFT JOIN SESSION.ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON ECM ON ECM.ALF_PE = pci.ALF_PE
LEFT JOIN SESSION.ETHNICITY_COPD_BY_DATE_AND_MOST_COMMON_PEDW ECMP ON ECMP.ALF_PE = pci.ALF_PE
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD AS (
SELECT DISTINCT ALF_PE, Ethnicity_Code
,CASE WHEN Ethnicity6 IS NULL THEN DESCRIPTION ELSE Ethnicity6 END AS ETHNICTITY_DESCRIPTION_5
,CASE WHEN EthnicityEngWales2021 IS NULL THEN DESCRIPTION ELSE EthnicityEngWales2021 END AS ETHNICTITY_DESCRIPTION_11
,CASE WHEN EthnicityEngWales2021 IS NULL THEN DESCRIPTION ELSE hes_ethnicity END AS ETHNICTITY_DESCRIPTION_21
FROM SESSION.ETHNICITY_COPD_BASIC EIB
LEFT JOIN sailw1387v.SS_ETHNICITY_CODES ec ON ec.READCODE = EIB.Ethnicity_Code
LEFT JOIN sailw1387v.SS_ETHNICITY_CODES_PEDW ecp ON ecp.ETH_GRP_DERIVED_CD = EIB.Ethnicity_Code
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS;

/*
--- find not stated 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_NULLS AS (
SELECT * FROM SESSION.ETHNICITY_COPD WHERE Ethnicity_Code IS NULL
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Re-run most common so not stated are included 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_MOST_COMMON AS (
SELECT DISTINCT em.ALF_PE, Ethnicity_Code, MAX_COUNT 
FROM SESSION.ETHNICITY_COUNT ec 
INNER JOIN SESSION.ETHNICITY_MAX em ON ec.Ethnicity_Code_Count = em.MAX_COUNT AND ec.alf_pe = em.alf_pe 
WHERE em.ALF_PE = ec.alf_pe AND ec.Ethnicity_Code_Count = em.MAX_COUNT
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- find those with Nulls that are actually not stated 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_NOTSTATED AS (
SELECT ecn.ALF_PE, ecm.ETHNICITY_CODE FROM SESSION.ETHNICITY_COPD_NULLS ecn 
INNER JOIN SESSION.ETHNICITY_MOST_COMMON ecm ON ecm.ALF_PE = ecn.ALF_PE
WHERE ecm.ETHNICITY_CODE IN(SELECT READCODE FROM sailw1387v.SS_ETHNICITY_CODES WHERE Ethnicity6 = 'Not Stated') 
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.ETHNICITY_COPD_NOTSTATED

---- join into main table 
DECLARE GLOBAL TEMPORARY TABLE ETHNICITY_COPD_V2 AS (
SELECT DISTINCT ec.ALF_PE
, CASE WHEN ec.Ethnicity_Code IS NULL THEN ecn.Ethnicity_Code ELSE ec.ETHNICITY_CODE END AS ETHNICITY_CODE
, ETHNICTITY_DESCRIPTION_5
, ETHNICTITY_DESCRIPTION_11
, ETHNICTITY_DESCRIPTION_21
FROM SESSION.ETHNICITY_COPD ec
LEFT JOIN SESSION.ETHNICITY_COPD_NOTSTATED ecn ON ecn.ALF_PE = ec.ALF_PE AND ecn.ETHNICITY_CODE = ec.ETHNICITY_CODE
ORDER BY ec.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;
*/
------------------------------------------------------------------------------------DEMOGRAPHIC TABLE--------------------------------------------------------------------------------------------------

-- Select latest registration date per ALF
DECLARE GLOBAL TEMPORARY TABLE Registration_COPD AS (
SELECT DISTINCT pci.ALF_PE, 
min(FROM_DT) AS FOLLOW_UP_START,
CASE WHEN (max(TO_DT) IS NULL OR max(TO_DT) = '01/01/9999') THEN max(TO_DT) 
WHEN (max(wap.DOD) < max(TO_DT) OR max(wap.DOD) IS NULL) THEN max(wap.DOD) ELSE max(TO_DT) 
END AS FOLLOW_UP_END 
FROM SAIL1387V.WDSD_AR_PERS_GP_20220307 wapg 
LEFT JOIN SAIL1387V.WDSD_AR_PERS_20220307 wap ON wapg.PERS_ID_PE  = wap.PERS_ID_PE 
INNER JOIN SESSION.prototype_cohort_COPD pci ON wap.ALF_PE = pci.alf_PE
WHERE wapg.FROM_DT > pci.WOB 
GROUP BY pci.ALF_PE 
ORDER BY pci.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-------- Identify True First Event for each ALF from GP and PEDW 
DECLARE GLOBAL TEMPORARY TABLE MIN_COPD_PEDW AS (
SELECT DISTINCT ps.ALF_PE, MIN(ep.EPI_STR_DT) AS FIRST_DIAGNOSIS_DT_PEDW
FROM SAIL1387V.PEDW_EPISODE_20220228 ep  
LEFT JOIN SAIL1387V.PEDW_SPELL_20220228 ps ON ps.PROV_UNIT_CD = ep.PROV_UNIT_CD AND  ps.SPELL_NUM_PE = ep.SPELL_NUM_PE
INNER JOIN SESSION.prototype_cohort_COPD gp ON gp.ALF_PE = ps.ALF_PE
INNER JOIN SAILW1387V.SS_COPD_ICDCODES CP ON CP.CODE = ep.DIAG_CD_123
WHERE YEAR(ep.EPI_STR_DT) > (YEAR(WOB) + 1)
GROUP BY ps.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.MIN_COPD_PEDW
ORDER BY ALF_PE

SELECT COUNT(ALF_PE), COUNT(DISTINCT ALF_PE) FROM SESSION.MIN_COPD_PEDW

-----  Consrtuct Final demographic table 
DECLARE GLOBAL TEMPORARY TABLE DEMOGRAPHIC_TABLE_COPD AS (SELECT DISTINCT wgec.ALF_PE, per.WOB, Ethnicity_Code, ETHNICTITY_DESCRIPTION_5, ETHNICTITY_DESCRIPTION_11, ETHNICTITY_DESCRIPTION_21, YEAR(per.WOB) AS YEAR_OF_BIRTH, lsoa.WIMD_2011_QUINTILE, wgec.GNDR_CD, per.DOD, FIRST_DIAGNOSIS_DT, FOLLOW_UP_START , FOLLOW_UP_END, INCIDENT, PREVALENT, 
CASE WHEN FIRST_DIAGNOSIS_DT > FIRST_DIAGNOSIS_DT_PEDW AND FIRST_DIAGNOSIS_DT_PEDW IS NOT NULL THEN FIRST_DIAGNOSIS_DT_PEDW ELSE FIRST_DIAGNOSIS_DT END AS EARLIEST_MENTION
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
LEFT JOIN SAIL1387V.WDSD_AR_PERS_20220307 per  ON per.ALF_PE = wgec.ALF_PE
LEFT JOIN SESSION.MIN_COPD_DIAG COPDd ON wgec.ALF_PE = COPDd.ALF_PE
LEFT JOIN sailw1387V.SS_COPD_LSOA lsoa ON wgec.ALF_PE = lsoa.ALF_PE
INNER JOIN sailw1387v.SS_COPD_CODES COPD ON wgec.EVENT_CD = COPD.EVENT_CD
LEFT JOIN SESSION.ETHNICITY_COPD et ON et.alf_pe = wgec.alf_pe
LEFT JOIN SESSION.Registration_COPD ri ON ri.ALF_PE = wgec.ALF_PE 
LEFT JOIN SESSION.MIN_COPD_PEDW mp ON mp.ALF_PE = wgec.ALF_PE
WHERE (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2') --// only alows for a clearly defined gender code - delete if not applicable 
AND (DOD > '31/12/2003' OR DOD IS NULL) --// change to day before project start date
AND YEAR(FIRST_DIAGNOSIS_DT) > YEAR(per.WOB)
AND COPD.EVENT_CD = wgec.EVENT_CD
AND (FOLLOW_UP_END > '31/12/2003') --// change to day before project start date
AND (2019 - YEAR(wgec.WOB)) >= '35' --//  Remove this to remove age cap on cohort
AND (YEAR(wgec.EVENT_DT)- YEAR(per.WOB)) >= '35' --//  remove events where the person is under 35 at the time
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT COUNT(DISTINCT ALF_PE) FROM SESSION.DEMOGRAPHIC_TABLE_COPD

-- Code to drop table before adding alterations 
DROP TABLE sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD

-- Create perminent table 
CREATE TABLE sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD(
 ALF_PE BIGINT, 
 WOB DATE, 
 Ethnicity_Code VARCHAR(5), 
 ETHNICTITY_DESCRIPTION_5 VARCHAR(100), 
 ETHNICTITY_DESCRIPTION_21 VARCHAR(100), 
 YEAR_OF_BIRTH INT, 
 WIMD_2011_QUINTILE INT, 
 GNDR_CD INT, 
 DOD DATE, 
 FIRST_DIAGNOSIS_DT DATE, 
 FOLLOW_UP_START DATE, 
 FOLLOW_UP_END DATE,
 EARLIEST_MENTION DATE
)

INSERT INTO sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD
SELECT DISTINCT ALF_PE , 
 WOB , 
 Ethnicity_Code, 
 ETHNICTITY_DESCRIPTION_5, 
 ETHNICTITY_DESCRIPTION_21, 
 YEAR_OF_BIRTH, 
 WIMD_2011_QUINTILE, 
 GNDR_CD, 
 DOD, 
 FIRST_DIAGNOSIS_DT, 
 FOLLOW_UP_START, 
 FOLLOW_UP_END,
 EARLIEST_MENTION 
FROM SESSION.DEMOGRAPHIC_TABLE_COPD

SELECT COUNT(DISTINCT ALF_PE), COUNT(ALF_PE) FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD

------------------------------------------------------------------------------------ MEDICATION -----------------------------------------------------------------------------------------------------
-------- establish medications and treatments used by each individual 

-- Drop table to add changes 
DROP TABLE sailw1387v.COPD_MEDICATION_CODES

-- Create table of medication codes 
CREATE TABLE sailw1387v.COPD_MEDICATION_CODES(
prodcodeid	VARCHAR(100)
,dmdid	VARCHAR(100)
,bnfcode	VARCHAR(100)
,readcode	VARCHAR(100)
,termfromemis VARCHAR(100)	
,dmdproductdescription	VARCHAR(100)
,bnfname	VARCHAR(100)
,productname	VARCHAR(100)
,readcode_desc	VARCHAR(100)
,dmdlevel VARCHAR(100)	
,vpid VARCHAR(100)	
,atc	 VARCHAR(100)
,formulation	VARCHAR(100)
,routeofadministration	VARCHAR(100)
,drugsubstancename	VARCHAR(100)
,substancestrength	VARCHAR(100)
,category VARCHAR(100))

-- Create table with the cohort and medications 
DECLARE GLOBAL TEMPORARY TABLE Cohort_With_Medication AS (
SELECT ssd.ALF_PE
, wlgp.EVENT_CD
, WLGP.EVENT_DT 
,dmdid
,bnfcode	
,readcode	
,termfromemis 
,dmdproductdescription	
,bnfname	
,productname	
,readcode_desc	
,dmdlevel 
,vpid 	
,atc	 
,formulation	
,routeofadministration	
,drugsubstancename	
,substancestrength	
,category 
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wlgp 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD ssd ON ssd.ALF_PE = wlgp.ALF_PE 
INNER JOIN sailw1387v.COPD_MEDICATION_CODES cmc ON cmc.READCODE = wlgp.EVENT_CD 
WHERE YEAR(EVENT_DT) = '2019'
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

---- IDENTIFY TRIPLE THERAPY 
DECLARE GLOBAL TEMPORARY TABLE LAMA AS (
SELECT ALF_PE, EVENT_DT, category FROM SESSION.Cohort_With_Medication
WHERE CATEGORY IN('lama')
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS;

DECLARE GLOBAL TEMPORARY TABLE LABA AS (
SELECT ALF_PE, EVENT_DT, category FROM SESSION.Cohort_With_Medication
WHERE CATEGORY IN('laba')
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS;

DECLARE GLOBAL TEMPORARY TABLE ICS AS (
SELECT ALF_PE, EVENT_DT, category FROM SESSION.Cohort_With_Medication
WHERE CATEGORY IN('ics')
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS;

DECLARE GLOBAL TEMPORARY TABLE TRIPLE AS (
SELECT DISTINCT la.ALF_PE, la.EVENT_DT, 'triple' AS Category FROM SESSION.LABA lb
INNER JOIN SESSION.LAMA la ON lb.ALF_PE = la.ALF_PE AND lb.EVENT_DT = la.EVENT_DT
INNER JOIN SESSION.ICS ic ON lb.ALF_PE = ic.ALF_PE AND lb.EVENT_DT = ic.EVENT_DT
ORDER BY ALF_PE, EVENT_DT
) WITH DATA WITH replace ON commit PRESERVE ROWS;

SELECT * FROM SESSION.TRIPLE

DECLARE GLOBAL TEMPORARY TABLE Medication_Catagory_Per_ALF AS (
SELECT DISTINCT ALF_PE, category FROM SESSION.Cohort_With_Medication
GROUP BY ALF_PE, category
ORDER BY ALF_PE, category
) WITH DATA WITH replace ON commit PRESERVE ROWS;

-- Create table with flags of each medication per ALF
DECLARE GLOBAL TEMPORARY TABLE Medication_Catagory_COPD AS(
SELECT DISTINCT dtc.ALF_PE 
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'lama') THEN 1 ELSE 0 END AS LAMA_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'laba') THEN 1 ELSE 0 END AS LABA_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'saba') THEN 1 ELSE 0 END AS SABA_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'laba-ics') THEN 1 ELSE 0 END AS LABAICS_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'saba-sama') THEN 1 ELSE 0 END AS SABASAMA_FLAG 
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'ics') THEN 1 ELSE 0 END AS ICS_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'abx') THEN 1 ELSE 0 END AS ABX_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'pde4i') THEN 1 ELSE 0 END AS pde4i_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'ocs') THEN 1 ELSE 0 END AS OCS_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'theophylline') THEN 1 ELSE 0 END AS THEOPHYLLINE_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'laba-lama') THEN 1 ELSE 0 END AS LABALAMA_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.TRIPLE WHERE category = 'triple') THEN 1 ELSE 0 END AS TRIPLE_FLAG
, CASE WHEN dtc.ALF_PE IN(SELECT ALF_PE FROM SESSION.Medication_Catagory_Per_ALF WHERE category = 'sama') THEN 1 ELSE 0 END AS SAMA_FLAG
FROM sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD dtc
WHERE FOLLOW_UP_END > '31/12/2019' AND (DOD > '31/12/2019' OR DOD IS NULL )
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS;

-- Counts of each medication for graphs 
SELECT 
SUM(LAMA_FLAG) AS LAMA
,SUM(LABA_FLAG) AS LABA
,SUM(SABA_FLAG) AS SABA
,SUM(LABAICS_FLAG) AS LABAICS
,SUM(SABASAMA_FLAG) AS SABASAMA
,SUM(ICS_FLAG) AS ICS
,SUM(ABX_FLAG) AS ABX
,SUM(pde4i_FLAG) AS pde4i
,SUM(OCS_FLAG) AS OCS
,SUM(THEOPHYLLINE_FLAG) AS THEOPHYLLINE
,SUM(LABALAMA_FLAG) AS LABALAMA
,SUM(TRIPLE_FLAG) AS TRIPLE
,SUM(SAMA_FLAG) AS SAMA
FROM SESSION.Medication_Catagory_COPD

SELECT Count(DISTINCT ALF_PE) FROM SESSION.Medication_Catagory_COPD
WHERE LAMA_FLAG = '0' AND 
LABA_FLAG  = '0' AND 
SABA_FLAG  = '0' AND 
LABAICS_FLAG  = '0' AND 
SABASAMA_FLAG  = '0' AND 
ICS_FLAG = '0' AND 
ABX_FLAG = '0' AND 
pde4i_FLAG = '0' AND 
OCS_FLAG = '0' AND 
THEOPHYLLINE_FLAG = '0' AND 
LABALAMA_FLAG = '0' AND 
TRIPLE_FLAG = '0' AND 
SAMA_FLAG = '0' 


-- select proportions for graphs
SELECT 
(SUM(LAMA_FLAG)/'179404')*100 AS LAMA
,(SUM(LABA_FLAG)/'179404')*100 AS LABA
,(SUM(SABA_FLAG)/'179404')*100 AS SABA
,(SUM(LABAICS_FLAG)/'179404')*100 AS LABAICS
,(SUM(SABASAMA_FLAG)/'179404')*100 AS SABASAMA
,(SUM(ICS_FLAG)/'179404')*100 AS ICS
,(SUM(ABX_FLAG)/'179404')*100 AS ABX
,(SUM(pde4i_FLAG)/'179404')*100 AS pde4i
,(SUM(OCS_FLAG)/'179404')*100 AS OCS
,(SUM(THEOPHYLLINE_FLAG)/'179404')*100 AS THEOPHYLLINE
,(SUM(LABALAMA_FLAG)/'179404')*100 AS LABALAMA
,(SUM(TRIPLE_FLAG)/'179404')*100 AS TRIPLE
,(SUM(SAMA_FLAG)/'179404')*100 AS SAMA
FROM SESSION.Medication_Catagory_COPD


------------------------------------------------------------------------------------CONDITIONS TABLE--------------------------------------------------------------------------------------------------
--Create Start and End date fields 
DECLARE GLOBAL TEMPORARY TABLE FIRST_EVENTS_COPD AS (
SELECT DISTINCT wgec.ALF_PE, wgec.EVENT_CD, MIN(EVENT_DT) AS START_DATE, MAX(EVENT_DT) AS LATEST_EVENT
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec
INNER JOIN sailw1387v.SS_COPD_CODES COPD ON COPD.EVENT_CD = wgec.EVENT_CD 
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD DTI ON DTI.ALF_PE = wgec.ALF_PE
GROUP BY wgec.ALF_PE, wgec.EVENT_CD
ORDER BY wgec.ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

SELECT * FROM SESSION.FIRST_EVENTS_COPD

-- Create table of all events that have occured per individual
DECLARE GLOBAL TEMPORARY TABLE CONDITIONS_TABLE_COPD AS (SELECT wgec.ALF_PE, wgec.EVENT_CD, wgec.EVENT_DT, START_DATE, LATEST_EVENT, INCIDENT, PREVALENT, 'COPD' AS CONDITION_TYPE, 'GP' AS DATASET_SOURCE 
FROM SAIL1387V.WLGP_GP_EVENT_CLEANSED_20220201 wgec 
LEFT JOIN SESSION.FIRST_EVENTS_COPD sdi ON sdi.ALF_PE = wgec.ALF_PE AND sdi.EVENT_CD = wgec.EVENT_CD 
INNER JOIN sailw1387v.SS_COPD_CODES COPD ON COPD.EVENT_CD = wgec.EVENT_CD
INNER JOIN sailw1387v.SS_DEMOGRAPHIC_TABLE_COPD DTI ON DTI.ALF_PE = wgec.ALF_PE
WHERE (wgec.GNDR_CD = '1' OR wgec.GNDR_CD = '2') 
) WITH DATA WITH replace ON commit PRESERVE ROWS ;

-- Code to drop table before adding alterations 
DROP TABLE sailw1387v.SS_CONDITIONS_TABLE_COPD

-- Create perminent table 
CREATE TABLE sailw1387v.SS_CONDITIONS_TABLE_COPD(
ALF_PE BIGINT
, EVENT_CD VARCHAR(5)
, EVENT_DT date 
, START_DATE DATE
, LATEST_EVENT DATE
, CONDITION_TYPE VARCHAR(100)
, DATASET_SOURCE VARCHAR(100))

INSERT INTO sailw1387v.SS_CONDITIONS_TABLE_COPD
SELECT ALF_PE
, EVENT_CD
, EVENT_DT
, START_DATE
, LATEST_EVENT
, CONDITION_TYPE
, DATASET_SOURCE
FROM SESSION.CONDITIONS_TABLE_COPD

------------------------------------------------------------------------------------VACCINATIONS TABLE-------------------------------------------------------------------------------------------------

-- Use cohort to assemble Vaccine data
DECLARE GLOBAL TEMPORARY TABLE COPD_VACCINATION_DATA AS (
SELECT DISTINCT scc.ALF_PE , VACC_DATE_OF_VACCINE, (YEAR(VACC_DATE_OF_VACCINE) - YEAR_OF_BIRTH) AS AGE_AT_VACCINATION, VACC_LOCATION_CODE, VACCINATIONLOCATIONTYPE, APPT_OUTCOME, CWO.PRS_PREFERRED_LANGUAGE, OPT_VACCINE, VACC_VACCINE_NAME, VACC_SITE_OF_ADMINISTRATION, VACC_ADVERSE_REACTION, VACC_ADVERSE_REACTION_TYPE 
FROM SAIL1387V.CVVD_WIS_OUTCOMEDATAV2_20220310 CWO 
INNER JOIN sailw1387V.SS_DEMOGRAPHIC_TABLE_COPD scc ON scc.ALF_PE = CWO.ALF_PE 
ORDER BY ALF_PE
) WITH DATA WITH replace ON commit PRESERVE ROWS

DELETE FROM SESSION.COPD_VACCINATION_DATA WHERE AGE_AT_VACCINATION < 1

-- Drop table to add changes if nessisary 
DROP TABLE sailw1387V.SS_COPD_VACCINATION_DATA

-- Create perminent table 
CREATE TABLE sailw1387V.SS_COPD_VACCINATION_DATA(
ALF_PE BIGINT
, VACC_DATE_OF_VACCINE DATE
, AGE_AT_VACCINATION INT 
, VACC_LOCATION_CODE VARCHAR(100)
, VACCINATIONLOCATIONTYPE VARCHAR(100)
, APPT_OUTCOME VARCHAR(100)
, PRS_PREFERRED_LANGUAGE VARCHAR(100)
, OPT_VACCINE VARCHAR(100)
, VACC_VACCINE_NAME VARCHAR(100)
, VACC_SITE_OF_ADMINISTRATION VARCHAR(100)
, VACC_ADVERSE_REACTION VARCHAR(100)
, VACC_ADVERSE_REACTION_TYPE VARCHAR(100))

INSERT INTO sailw1387V.SS_COPD_VACCINATION_DATA
SELECT DISTINCT 
ALF_PE 
, VACC_DATE_OF_VACCINE
, AGE_AT_VACCINATION
, VACC_LOCATION_CODE
, VACCINATIONLOCATIONTYPE
, APPT_OUTCOME
, PRS_PREFERRED_LANGUAGE
, OPT_VACCINE
, VACC_VACCINE_NAME
, VACC_SITE_OF_ADMINISTRATION
, VACC_ADVERSE_REACTION
, VACC_ADVERSE_REACTION_TYPE
FROM SESSION.COPD_VACCINATION_DATA
ORDER BY ALF_PE

